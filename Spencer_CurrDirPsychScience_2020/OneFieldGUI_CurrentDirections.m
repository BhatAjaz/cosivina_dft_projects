%% setting up the GUI
gui = StandardGUI(sim, [50, 50, 1000, 720], 0.01, [0.1, 0.1, 0.8, 0.9], [3, 1], 0.08, [0.0, 0.0, 1.0, 1/4], [6, 4], ...
  elementGroups, elementsInGroup);


gui.addVisualization(MultiPlot({'field u', 'field u', 'mem u'}, {'activation', 'output', 'output'}, ...
  [1, 10, 10], 'horizontal', {'YLim', [-15, 15], 'XGrid', 'on', 'YGrid', 'on','fontsize', 20}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}, ...
  {'Color', 'c', 'LineWidth', 2} }, ...
  'field activation - final time step', ...
  'feature space', 'activation / output'), [2, 1]);
% % % gui.addVisualization(MultiPlot({'field u', 'field u', 'shifted stimulus sum', 'mem u'}, {'activation', 'output', 'output', 'output'}, ...
% % %   [1, 10, 1, 10], 'horizontal', {'YLim', [-12, 12], 'XGrid', 'on', 'YGrid', 'on','fontsize', 20}, ...
% % %   {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}, {'Color', [0, 0.75, 0], 'LineWidth', 2}, ...
% % %   {'Color', 'c', 'LineWidth', 2} }, ...
% % %   'field activation - final time step', ...
% % %   'feature space', 'activation / output'), [2, 1]);

gui.addVisualization(SurfacePlot('history trial', 'output', [-15, 15], 'mesh', {'view', [-10,30],'fontsize',20}, ...
    {}, 'field activation', ...
  'feature space', '', 'activation'), [1, 1]);

gui.addVisualization(KernelPlot({'u -> u', 'u -> u'}, {'kernel', 'amplitudeGlobal'}, ...
  {'local', 'global'}, fieldSize/2, {'YLim', [-0.5, 1.5], 'XGrid', 'on', 'YGrid', 'on', 'fontsize', 20}, ...
  {'Color', [0.5, 0, 0], 'LineWidth', 2}, ...
  'interaction function', 'distance in feature space', 'interaction weight'), [3, 1]);


% % % gui.addVisualization(MultiPlot({'history s_1'}, {'output'}, ...
% % %   [1], 'horizontal', ...
% % %   {'XLim', [-historyDuration, 10], 'YLim', [-10, 10], 'Box', 'on', 'XGrid', 'on', 'YGrid', 'on', ...
% % %   'view', [-60,30], 'CameraUpVector', [0,1,0], 'ZTick', [0], 'ZTickLabel', [], 'fontsize', 18}, ...
% % %   { {'Color', [0, 0.5, 0], 'LineWidth', 2, 'XData', 0:-1:-historyDuration+1}}, ...
% % %   'activation at feature 25', 'time', 'activation (u)'), [1, 4.75], [1,2.5]);


% % % add sliders
% % % resting level and noise
% % gui.addControl(ParameterSlider('h', 'field u', 'h', [-10, 0], '%0.1f', 1, 'resting level of field u'), [1, 1]);
% % gui.addControl(ParameterSlider('q', 'noise kernel', 'amplitude', [0, 10], '%0.1f', 1, ...
% %   'noise level for field u'), [1, 3]);
% % % lateral interactions
% % gui.addControl(ParameterSlider('c_exc', 'u -> u', 'amplitudeExc', [0, 50], '%0.1f', 1, ...
% %   'strength of lateral excitation'), [2, 1]);
% % gui.addControl(ParameterSlider('c_inh', 'u -> u', 'amplitudeInh', [0, 50], '%0.1f', 1, ...
% %   'strength of lateral inhibition'), [2, 2]);
% % gui.addControl(ParameterSlider('c_glob', 'u -> u', 'amplitudeGlobal', [0, 2], '%0.2f', -1, ...
% %   'strength of global inhibition'), [2, 3]);

% % % stimuli
% % gui.addControl(ParameterSlider('w_s1', 'stimulus 1', 'sigma', [0, 20], '%0.1f', 1, 'width of stimulus 1'), [4, 1]);
% % gui.addControl(ParameterSlider('p_s1', 'stimulus 1', 'position', [0, fieldSize], '%0.1f', 1, ...
% %   'position of stimulus 1'), [4, 2]);
% % gui.addControl(ParameterSlider('a_s1', 'stimulus 1', 'amplitude', [0, 20], '%0.1f', 1, ...
% %   'amplitude of stimulus 1'), [4, 3]);
% % gui.addControl(ParameterSlider('w_s2', 'stimulus 2', 'sigma', [0, 20], '%0.1f', 1, 'width of stimulus 2'), [5, 1]);
% % gui.addControl(ParameterSlider('p_s2', 'stimulus 2', 'position', [0, fieldSize], '%0.1f', 1, ...
% %   'position of stimulus 2'), [5, 2]);
% % gui.addControl(ParameterSlider('a_s2', 'stimulus 2', 'amplitude', [0, 20], '%0.1f', 1, ...
% %   'amplitude of stimulus 2'), [5, 3]);
% % gui.addControl(ParameterSlider('w_s3', 'stimulus 3', 'sigma', [0, 20], '%0.1f', 1, 'width of stimulus 3'), [6, 1]);
% % gui.addControl(ParameterSlider('p_s3', 'stimulus 3', 'position', [0, fieldSize], '%0.1f', 1, ...
% %   'position of stimulus 3'), [6, 2]);
% % gui.addControl(ParameterSlider('a_s3', 'stimulus 3', 'amplitude', [0, 20], '%0.1f', 1, ...
% %   'amplitude of stimulus 3'), [6, 3]);

% % % add buttons
% % gui.addControl(GlobalControlButton('Pause', gui, 'pauseSimulation', true, false, false, 'pause simulation'), [1, 4]);
% % gui.addControl(GlobalControlButton('Reset', gui, 'resetSimulation', true, false, true, 'reset simulation'), [2, 4]);
% % gui.addControl(GlobalControlButton('Parameters', gui, 'paramPanelRequest', true, false, false, 'open parameter panel'), [3, 4]);
% % gui.addControl(GlobalControlButton('Save', gui, 'saveParameters', true, false, true, 'save parameter settings'), [4, 4]);
% % gui.addControl(GlobalControlButton('Load', gui, 'loadParameters', true, false, true, 'load parameter settings'), [5, 4]);
% % gui.addControl(GlobalControlButton('Quit', gui, 'quitSimulation', true, false, false, 'quit simulation'), [6, 4]);
% % 
