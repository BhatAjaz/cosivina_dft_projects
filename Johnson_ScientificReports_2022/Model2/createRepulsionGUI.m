%% setting up the GUI
elementGroups = sim.elementLabels;
elementsInGroup = sim.elementLabels;

% exclude elements that should not appear in the param panel
excludeLabels = {'sum', 'expand', 'boost', 'scale'};
excludeIndices = zeros(size(elementGroups));
for i = 1 : length(excludeLabels)
  excludeIndices = excludeIndices | strncmp(excludeLabels{i}, elementGroups, length(excludeLabels{i}));
end
elementGroups(excludeIndices) = [];
elementsInGroup(excludeIndices) = [];

% elementGroups = {'field u', 'field v', 'field w', 'field atn', 'field vis', 'u -> u', 'u -> v', 'u -> w', 'u -> atn', 'u -> vis' ...
%   'v -> u (local)', 'v -> u (global)', 'v -> w (local)', 'v -> w (global)', ...
%   'w -> u', 'w -> v', 'w -> w', 'w -> atn', 'w -> vis', 'atn -> u', 'atn -> w', 'atn -> atn', 'atn -> vis', ...
%   'vis -> u', 'vis -> w', 'vis -> atn', 'vis -> vis (exh)', 'vis -> vis (inh)', 'vis -> vis (global)', ...
%   'vis stim 1', 'vis stim 2', 'vis stim 3', 'flat boost', 'scale flat boost', 'scale flat boost 2', 'scale flat boost 3', 'wheel pattern', 'wheel stimulus', 'wheel noise', 'noise kernel u', 'noise kernel v', 'noise kernel w', 'noise kernel atn', 'noise kernel vis'};
figureWidth = 1200;
figureHeight = 750;
S = diag([figureHeight/figureWidth, 1, figureHeight/figureWidth, 1]);

gui = StandardGUI(sim, [50, 250, figureWidth, figureHeight], 0.05, [0.05, .1, .95, .9], [1.5, 8], [0.02, 0.05], [0.0, 0.0, 1.0, .05], [1, 6], ...
  elementGroups, elementGroups);

gui.addVisualization(MultiPlot({'field ior_s', 'field ior_s', 'pd_atnc', 'pd_atnc', 'cos', 'cos'}, ...
    {'activation', 'output', 'activation', 'output', 'activation', 'output'}, ...
    [1, 10, 1, 10, 1, 10], 'horizontal', ...
  {'XLim', [1, fieldSize], 'YLim', [-25, 25], 'XGrid', 'on', 'YGrid', 'on'}, {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2} ...
  {'bs', 'MarkerSize', 6, 'XDataMode', 'manual', 'XData', 1}, ...
  {'rs', 'MarkerSize', 6, 'XDataMode', 'manual', 'XData', 1}, ...
  {'bs', 'MarkerSize', 6, 'XDataMode', 'manual', 'XData', 15}, ...
  {'rs', 'MarkerSize', 6, 'XDataMode', 'manual', 'XData', 15}},  'field ior s'), ...
  [1, 6], [.3, 3]);
gui.addVisualization(MultiPlot({'field atn_sr', 'field atn_sr'}, {'activation', 'output'}, [1, 10], 'horizontal', ...
  {'XLim', [1, fieldSize], 'YLim', [-25, 25], 'XGrid', 'on', 'YGrid', 'on'}, {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}},  'field atn sr'), ...
  [1.25, 6], [.3, 3]);

% gui.addVisualization(MultiPlot({'pd_atnc', 'pd_atnc', 'cos', 'cos'}, ...
%   {'activation', 'output', 'activation', 'output'}, ...
%   [1, 10, 1, 10], 'horizontal', ...
%   {'XLim', [1, fieldSize], 'YLim', [-25, 25], 'Box', 'on'}, ...
%   {{'bs', 'MarkerSize', 4, 'XDataMode', 'manual', 'XData', 1}, ...
%   {'rs', 'MarkerSize', 4, 'XDataMode', 'manual', 'XData', 1}, ...
%   {'bs', 'MarkerSize', 4, 'XDataMode', 'manual', 'XData', 5}, ...
%   {'rs', 'MarkerSize', 4, 'XDataMode', 'manual', 'XData', 5}}), [1, 5], [.25, 3]);

gui.addVisualization(MultiPlot({'field atn', 'field atn'}, {'activation', 'output'}, ...
  [1, 10], 'vertical', {'XLim', [-25, 25], 'YLim', [1,fieldSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field atn'), [1.5, 5]);
gui.addVisualization(MultiPlot({'field u', 'field u'}, {'activation', 'output'}, ...
  [1, 10], 'vertical', {'XLim', [-50, 55], 'YLim', [1,fieldSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field u'), [1.5, 4]);
gui.addVisualization(MultiPlot({'field v', 'field v'}, {'activation', 'output'}, ...
  [1, 10], 'vertical', {'XLim', [-25, 25], 'YLim', [1,fieldSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field v'), [1.5, 3]);
gui.addVisualization(MultiPlot({'field w', 'field w'}, {'activation', 'output'}, ...
  [1, 10], 'vertical', {'XLim', [-25, 25], 'YLim', [1,fieldSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field w'), [1.5, 2]);
gui.addVisualization(MultiPlot({'field atn_c', 'field atn_c'}, {'activation', 'output'}, ...
  [1, 10], 'vertical', {'XLim', [-25, 25], 'YLim', [1,fieldSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field atnc'), [1.5, 1]);

gui.addVisualization(ScaledImage('field vis', 'activation', [-7.5, 7.5], ...
    {'CLim', [-7.5, 7.5], 'YAxisLocation', 'left', 'YDir', 'normal'}, {}, 'field vis', 'space', 'feature'), [1.5, 6], [1, 3]);

% gui.addVisualization(MultiPlot({'noisy wheel pattern'}, {'output'}, ...
%   [1], 'vertical', {'XLim', [-25, 25], 'YLim', [1,wheelSize], 'XGrid', 'on', 'YGrid', 'on'}, ...
%   {{'b', 'LineWidth', 3}}, ...
%   'wheel'), [1.5, 9.5]);

% wheel
% % % w = 0.4; h = 0.125; m = 0.05;
% % % ylim_b = [-10, 10];
% % % d = h/sqrt(2) + w; % size of diagonal axes
% % % up = [(2*fieldSize-1)/(w*sqrt(2))-2, diff(ylim_b)/h, 0]; % "up vector" for diagonal axes
% % % up = up/norm(up, 2);
% % % pbar = [sqrt(2)*w, h, 1]; % "plot box aspect ratio" for diagonal axes
% % % gui.addVisualization(MultiPlot({'noisy wheel pattern'}, {'output'}, ...
% % %   [1], 'horizontal', ...
% % %   {'XLim', [-fieldSize+1, fieldSize-1], 'YLim', ylim_b, 'PlotBoxAspectRatio', pbar, 'CameraUpVector', up, 'Box', 'on', ...
% % %   'XTick', -fieldSize+1:100:fieldSize-1, 'YGrid', 'on'}, ...
% % %   {{'b', 'LineWidth', 2, 'XDataMode', 'manual', 'XData', -fieldSize+1:fieldSize-1}}, ...
% % %   '', 'wheel', '', [w+h+3.5*m-d/2, 1-w-h-3.5*m-d/2, d, d] * S), [.75, 3.75], [1, 2]);


% general control buttons
gui.addControl(GlobalControlButton('Pause', gui, 'pauseSimulation', true, false, false, 'pause simulation'), [1, 1.5]);
%gui.addControl(GlobalControlButton('Reset', gui, 'resetSimulation', true, false, true, 'reset simulation'), [1, 2]);
gui.addControl(GlobalControlButton('Parameters', gui, 'paramPanelRequest', true, false, false, 'open parameter panel'), [1, 2.5]);
gui.addControl(GlobalControlButton('Save', gui, 'saveParameters', true, false, true, 'save parameter settings'), [1, 3.5]);
gui.addControl(GlobalControlButton('Load', gui, 'loadParameters', true, false, true, 'load parameter settings'), [1, 4.5]);
gui.addControl(GlobalControlButton('Quit', gui, 'quitSimulation', true, false, false, 'quit simulation'), [1, 5.5]);
